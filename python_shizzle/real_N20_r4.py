import numpy as np
from scipy.linalg import lu, solve_triangular

np.set_printoptions(linewidth=500, suppress=True, precision=3)

Uc_U = np.array([[-0.138837,0.0657314,-0.0790643,-0.466084,-0.080382,-0.22878,-0.399516,0.379915,0.460943,-0.421544],
                 [-0.0371347,-0.228854,-0.177989,0.780262,-0.0893123,-0.244697,-0.367283,0.267144,0.165039,0.0663734],
                 [0.452381,0.515672,0.447293,-0.0226717,-0.100475,-0.262456,-0.321395,0.132767,-0.105294,0.343309],
                 [-0.235135,-0.637367,0.249484,-0.320034,-0.114826,-0.282032,-0.256641,-0.0223606,-0.308807,0.345481],
                 [0.150811,0.175737,-0.771808,-0.164973,-0.133961,-0.302908,-0.165679,-0.190064,-0.382513,0.0622963],
                 [-0.580331,0.344541,0.263712,0.195501,-0.160748,-0.323179,-0.0385285,-0.343544,-0.245309,-0.356054],
                 [0.564159,-0.331039,0.154336,0.0451621,-0.200925,-0.336795,0.136337,-0.409527,0.15123,-0.428144],
                 [-0.20227,0.108625,-0.102206,-0.0585277,-0.267877,-0.323677,0.360904,-0.203705,0.578216,0.500809],
                 [0.0263004,-0.013136,0.016062,0.0109449,-0.401749,-0.203479,0.550078,0.622868,-0.299226,-0.125954],
                 [-0.000782798,0.0003699,-0.000523504,-0.000392865,-0.803097,0.532503,-0.236583,-0.121865,0.0247281,0.00641643]])
Vc_V = np.array([[-0.138837,0.0657314,-0.0790643,-0.466084,-0.080382,-0.22878,-0.399516,0.379915,0.460943,-0.421544],
                 [-0.0371347,-0.228854,-0.177989,0.780262,-0.0893123,-0.244697,-0.367283,0.267144,0.165039,0.0663734],
                 [0.452381,0.515672,0.447293,-0.0226717,-0.100475,-0.262456,-0.321395,0.132767,-0.105294,0.343309],
                 [-0.235135,-0.637367,0.249484,-0.320034,-0.114826,-0.282032,-0.256641,-0.0223606,-0.308807,0.345481],
                 [0.150811,0.175737,-0.771808,-0.164973,-0.133961,-0.302908,-0.165679,-0.190064,-0.382513,0.0622963],
                 [-0.580331,0.344541,0.263712,0.195501,-0.160748,-0.323179,-0.0385285,-0.343544,-0.245309,-0.356054],
                 [0.564159,-0.331039,0.154336,0.0451621,-0.200925,-0.336795,0.136337,-0.409527,0.15123,-0.428144],
                 [-0.20227,0.108625,-0.102206,-0.0585277,-0.267877,-0.323677,0.360904,-0.203705,0.578216,0.500809],
                 [0.0263004,-0.013136,0.016062,0.0109449,-0.401749,-0.203479,0.550078,0.622868,-0.299226,-0.125954],
                 [-0.000782798,0.0003699,-0.000523504,-0.000392865,-0.803097,0.532503,-0.236583,-0.121865,0.0247281,0.00641643]])
matrix = np.array([[1000,0.999001,0.49975,0.333222,0.249938,0.19996,0.166639,0.142837,0.124984,0.111099],
                   [0.999001,1000,0.999001,0.49975,0.333222,0.249938,0.19996,0.166639,0.142837,0.124984],
                   [0.49975,0.999001,1000,0.999001,0.49975,0.333222,0.249938,0.19996,0.166639,0.142837],
                   [0.333222,0.49975,0.999001,1000,0.999001,0.49975,0.333222,0.249938,0.19996,0.166639],
                   [0.249938,0.333222,0.49975,0.999001,1000,0.999001,0.49975,0.333222,0.249938,0.19996],
                   [0.19996,0.249938,0.333222,0.49975,0.999001,1000,0.999001,0.49975,0.333222,0.249938],
                   [0.166639,0.19996,0.249938,0.333222,0.49975,0.999001,1000,0.999001,0.49975,0.333222],
                   [0.142837,0.166639,0.19996,0.249938,0.333222,0.49975,0.999001,1000,0.999001,0.49975],
                   [0.124984,0.142837,0.166639,0.19996,0.249938,0.333222,0.49975,0.999001,1000,0.999001],
                   [0.111099,0.124984,0.142837,0.166639,0.19996,0.249938,0.333222,0.49975,0.999001,1000]])


b = np.array([
    180428.94,
    84693.09  ,
    168169.28 ,
    171463.69 ,
    195774.78 ,
    42423.83  ,
    71988.54  ,
    164976.05 ,
    59651.66  ,
    118964.14]).reshape(10,1)

print(Uc_U.T.dot(Vc_V))
print(np.linalg.solve(matrix, b))

N = 10
rank = 6
leftover = N - rank

# new_mat = matrix
new_mat = Uc_U.T.dot(matrix).dot(Vc_V)

p, Loo, Uoo = lu(new_mat[:leftover, :leftover], overwrite_a=True)
print(p)
new_mat[:leftover, leftover:] -= solve_triangular(Loo, new_mat[:leftover, leftover:], lower=True)
new_mat[leftover:, :leftover] -= solve_triangular(Uoo, new_mat[leftover:, :leftover].T, lower=False).T
new_mat[leftover:, leftover:] -= new_mat[leftover:, :leftover].dot(new_mat[:leftover, leftover:])

y = Uc_U.T.dot(b)
# y = b
y[:leftover] = solve_triangular(Loo, y[:leftover], lower=True)
y[leftover:] -= new_mat[leftover:, :leftover].dot(y[:leftover])
# y = piv.dot(y)

# y = piv.T.dot(y)
y = Vc_V.dot(y)
y[:leftover] -= new_mat[:leftover, leftover:].dot(y[leftover:])
y[:leftover] = solve_triangular(Uoo, y[:leftover], lower=False)

print("from trisolve:")
print(y)

